name: Runtime Smoke (run main.py for 45s with timeout)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  runtime_smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    env:
      DRY_RUN: "1"
      PYTHONUNBUFFERED: "1"
      TZ: "Europe/Athens"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies (best effort)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt || true; fi

      - name: Run main.py with hard timeout (collect logs)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ci_logs
          set +e
          timeout 45s python main.py > ci_logs/runtime.log 2>&1
          code=$?
          set -e
          echo "$code" > ci_logs/exit_code.txt
          echo "Runtime exit code: $code"
          # 0 (clean exit) ή 124 (timeout) θεωρούνται ΟΚ σε smoke
          if [ "$code" != "0" ] && [ "$code" != "124" ]; then
            echo "::warning::main.py exited with non-zero ($code)."
          fi

      - name: Fail if exceptions detected in last 200 lines
        shell: bash
        run: |
          tail -n 200 ci_logs/runtime.log > ci_logs/runtime_tail.log || true
          if grep -Ei "Traceback|Exception|ERROR" ci_logs/runtime_tail.log >/dev/null 2>&1; then
            echo "::error::Exception-like patterns found in runtime logs (tail)."
            echo "----- tail (200) -----"
            cat ci_logs/runtime_tail.log
            exit 1
          else
            echo "No exceptions detected in tail."
          fi

      - name: Upload runtime logs
        uses: actions/upload-artifact@v4
        with:
          name: runtime-smoke-logs_${{ github.sha }}
          path: ci_logs/
          if-no-files-found: warn
