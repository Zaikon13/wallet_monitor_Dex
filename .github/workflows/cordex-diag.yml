name: Cordex Diag (Ultra-lite + Debug SAFE)

on:
  workflow_dispatch:

jobs:
  diag:
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (best-effort)
        run: |
          python -V
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
          pip install pipdeptree || true

      - name: Run Cordex Diag (never fail)
        continue-on-error: true
        env:
          TZ: ${{ secrets.TZ }}
          WALLET_ADDRESS: ${{ secrets.WALLET_ADDRESS }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          ETHERSCAN_API: ${{ secrets.ETHERSCAN_API }}
          RPC_URL: ${{ secrets.RPC_URL }}
          DEX_PAIRS: ${{ secrets.DEX_PAIRS }}
          PRICE_MOVE_THRESHOLD: ${{ secrets.PRICE_MOVE_THRESHOLD }}
          INTRADAY_HOURS: ${{ secrets.INTRADAY_HOURS }}
          EOD_TIME: ${{ secrets.EOD_TIME }}
        run: |
          set +e
          python scripts/cordex_diag.py --mask-secrets --try-import main.py core telegram reports utils || true
          # placeholders + μικρό debug αν δεν παραχθεί report
          if [ ! -f diag_report.md ]; then
            {
              echo "_No diag_report.md produced._"
              echo
              echo "### Debug"
              echo "- CWD: $(pwd)"
              echo "- Files in CWD:"
              ls -la
              echo
              echo "- Python:"
              python -V
              echo
              echo "- scripts/cordex_diag.py exists? $([ -f scripts/cordex_diag.py ] && echo YES || echo NO)"
            } > diag_report.md
          fi
          [ -f diag_report.json ] || echo '{}' > diag_report.json
          [ -f diag_tree.txt ]    || echo "_No diag_tree.txt produced._" > diag_tree.txt
          [ -f diag_imports.log ] || echo "_No diag_imports.log produced._" > diag_imports.log

      - name: Create/Update Issue "Cordex Diag — latest"
        id: issue
        if: always()
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const fs = require('fs');

            function readOr(p, alt) {
              try { return fs.readFileSync(p, 'utf8'); } catch { return alt; }
            }
            function tail(txt, n) {
              const lines = (txt || '').split('\n');
              return lines.slice(Math.max(0, lines.length - n)).join('\n');
            }

            const title = 'Cordex Diag — latest';
            const md   = readOr('diag_report.md',   '_No diag_report.md produced._');
            const tree = readOr('diag_tree.txt',    '_No diag_tree.txt produced._');
            const imps = readOr('diag_imports.log', '_No diag_imports.log produced._');

            // ΧΩΡΙΣ template literals (backticks) για να μην σκάει από περιεχόμενο με `${` ή backticks
            const body =
              md +
              '\n\n---\n### diag_tree.txt (tail)\n```\n' + tail(tree, 40) + '\n```\n' +
              '\n### diag_imports.log\n```\n' + imps + '\n```\n';

            const owner = context.repo.owner;
            const repo  = context.repo.repo;

            const { data: issues } = await github.rest.issues.listForRepo({ owner, repo, state: 'open' });
            const existing = issues.find(i => i.title === title);

            let url = '';
            if (existing) {
              const { data } = await github.rest.issues.update({
                owner, repo, issue_number: existing.number, body
              });
              url = data.html_url || '';
            } else {
              const { data } = await github.rest.issues.create({
                owner, repo, title, body
              });
              url = data.html_url || '';
            }
            return url;

      - name: Show Issue link
        if: always()
        run: |
          echo "### Cordex Diag Issue" >> "$GITHUB_STEP_SUMMARY"
          echo "${{ steps.issue.outputs.result }}" >> "$GITHUB_STEP_SUMMARY" || true

      - name: Upload artifact (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cordex-diag
          path: |
            diag_report.md
            diag_report.json
            diag_imports.log
            diag_tree.txt
          if-no-files-found: warn
