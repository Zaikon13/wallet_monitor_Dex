name: Cordex Diag

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/cordex-diag.yml"
      - "scripts/cordex_diag.py"
      - "requirements.txt"
      - "main.py"
      - "core/**"
      - "reports/**"
      - "telegram/**"
      - "utils/**"

jobs:
  diag:
    runs-on: ubuntu-latest
    permissions:
      contents: write     # για commit στο repo
      issues: write       # για δημιουργία/ενημέρωση issue
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (best-effort)
        run: |
          python -V
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
          pip install pipdeptree || true

      - name: Run Cordex Diag
        env:
          TZ: ${{ secrets.TZ }}
          WALLET_ADDRESS: ${{ secrets.WALLET_ADDRESS }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          ETHERSCAN_API: ${{ secrets.ETHERSCAN_API }}
          RPC_URL: ${{ secrets.RPC_URL }}
          DEX_PAIRS: ${{ secrets.DEX_PAIRS }}
          PRICE_MOVE_THRESHOLD: ${{ secrets.PRICE_MOVE_THRESHOLD }}
          INTRADAY_HOURS: ${{ secrets.INTRADAY_HOURS }}
          EOD_TIME: ${{ secrets.EOD_TIME }}
        run: |
          python scripts/cordex_diag.py --mask-secrets --try-import main.py core telegram reports utils

      - name: Publish diag into repo (.cordex/latest)
        run: |
          set -e
          mkdir -p .cordex/latest
          cp diag_report.md .cordex/latest/ || true
          cp diag_report.json .cordex/latest/ || true
          cp diag_tree.txt .cordex/latest/ || true
          cp diag_imports.log .cordex/latest/ || true

          # commit μόνο αν υπάρχουν αλλαγές
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet -- .cordex/latest; then
            git add .cordex/latest
            git commit -m "Cordex diag: $GITHUB_RUN_NUMBER ($GITHUB_SHA)"
            git push
          fi

      - name: Save Job Summary
        run: |
          echo "## Cordex Diag Summary" >> $GITHUB_STEP_SUMMARY
          if [ -f diag_report.md ]; then
            cat diag_report.md >> $GITHUB_STEP_SUMMARY
          else
            echo "_No diag_report.md produced._" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Create/Update Issue 'Cordex Diag — latest'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let body = "_No diag_report.md produced._";
            if (fs.existsSync('diag_report.md')) {
              body = fs.readFileSync('diag_report.md', 'utf8');
            }
            // πρόσθεσε link στα committed files
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            const branch = process.env.GITHUB_REF_NAME || 'main';
            const baseUrl = `https://raw.githubusercontent.com/${owner}/${repo}/${branch}/.cordex/latest`;

            const appendix = `
---
**Raw files**
- [diag_report.md](${baseUrl}/diag_report.md)
- [diag_report.json](${baseUrl}/diag_report.json)
- [diag_tree.txt](${baseUrl}/diag_tree.txt)
- [diag_imports.log](${baseUrl}/diag_imports.log)
`;
            const fullBody = body + appendix;

            const { data: issues } = await github.rest.issues.listForRepo({
              owner, repo, state: 'open'
            });
            const title = 'Cordex Diag — latest';
            const existing = issues.find(i => i.title === title);
            if (existing) {
              await github.rest.issues.update({
                owner, repo, issue_number: existing.number, body: fullBody
              });
            } else {
              await github.rest.issues.create({
                owner, repo, title, body: fullBody
              });
            }

      - name: Upload artifact (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cordex-diag
          path: |
            diag_report.md
            diag_report.json
            diag_imports.log
            diag_tree.txt
          if-no-files-found: warn
