name: Cordex Diag (Ultra-lite)

on:
  workflow_dispatch:

jobs:
  diag:
    runs-on: ubuntu-latest
    permissions:
      issues: write  # μόνο για Issue (όχι commits)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (best-effort)
        run: |
          python -V
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
          pip install pipdeptree || true

      - name: Run Cordex Diag
        continue-on-error: true
        env:
          TZ: ${{ secrets.TZ }}
          WALLET_ADDRESS: ${{ secrets.WALLET_ADDRESS }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          ETHERSCAN_API: ${{ secrets.ETHERSCAN_API }}
          RPC_URL: ${{ secrets.RPC_URL }}
          DEX_PAIRS: ${{ secrets.DEX_PAIRS }}
          PRICE_MOVE_THRESHOLD: ${{ secrets.PRICE_MOVE_THRESHOLD }}
          INTRADAY_HOURS: ${{ secrets.INTRADAY_HOURS }}
          EOD_TIME: ${{ secrets.EOD_TIME }}
        run: |
          python scripts/cordex_diag.py --mask-secrets --try-import main.py core telegram reports utils || true
          [ -f diag_report.md ]   || echo "_No diag_report.md produced._" > diag_report.md

      - name: Create/Update Issue "Cordex Diag — latest"
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const title = 'Cordex Diag — latest';
            let body = '_No diag_report.md produced._';
            if (fs.existsSync('diag_report.md')) {
              body = fs.readFileSync('diag_report.md', 'utf8');
            }
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            const existing = issues.find(i => i.title === title);
            if (existing) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existing.number,
                body
              });
            } else {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body
              });
            }

      - name: Upload artifact (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cordex-diag
          path: |
            diag_report.md
            diag_report.json
            diag_imports.log
            diag_tree.txt
          if-no-files-found: warn
