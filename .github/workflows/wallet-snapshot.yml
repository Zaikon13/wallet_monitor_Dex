name: Wallet Snapshot (on demand, SAFE)

on:
  workflow_dispatch:

jobs:
  snapshot:
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (requests only)
        run: |
          python -V
          python -m pip install --upgrade pip
          pip install requests

      - name: Run snapshot (never fail)
        id: run_snap
        continue-on-error: true
        env:
          TZ: ${{ secrets.TZ }}
          WALLET_ADDRESS: ${{ secrets.WALLET_ADDRESS }}
          RPC_URL: ${{ secrets.RPC_URL }}
          CRONOS_RPC_URL: ${{ secrets.CRONOS_RPC_URL }}
          DEX_PAIRS: ${{ secrets.DEX_PAIRS }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          set +e
          python scripts/snapshot_wallet.py > snapshot.txt 2>&1 || true
          # Αν δεν γράφτηκε τίποτα, βάλε χρήσιμα debug
          if [ ! -s snapshot.txt ]; then
            {
              echo "No snapshot output produced."
              echo
              echo "### Debug"
              echo "- CWD: $(pwd)"
              echo "- Python:"; python -V
              echo "- Files:"; ls -la
              echo
              echo "- Env presence:"
              echo "WALLET_ADDRESS: $([ -n "$WALLET_ADDRESS" ] && echo SET || echo MISSING)"
              echo "RPC_URL/CRONOS_RPC_URL: $([ -n "$RPC_URL$CRONOS_RPC_URL" ] && echo SET || echo MISSING)"
              echo "DEX_PAIRS: $([ -n "$DEX_PAIRS" ] && echo SET || echo EMPTY)"
              echo "TELEGRAM_BOT_TOKEN: $([ -n "$TELEGRAM_BOT_TOKEN" ] && echo SET || echo MISSING)"
              echo "TELEGRAM_CHAT_ID: $([ -n "$TELEGRAM_CHAT_ID" ] && echo SET || echo MISSING)"
            } > snapshot.txt
          fi

      - name: Create/Update Issue "Wallet Snapshot — latest"
        id: issue
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const fs = require('fs');
            const title = 'Wallet Snapshot — latest';
            let body = '_No snapshot.txt_';
            try { body = fs.readFileSync('snapshot.txt', 'utf8'); } catch {}
            const { owner, repo } = context.repo;
            const { data: issues } = await github.rest.issues.listForRepo({ owner, repo, state: 'open' });
            const existing = issues.find(i => i.title === title);
            let url = '';
            if (existing) {
              const { data } = await github.rest.issues.update({ owner, repo, issue_number: existing.number, body });
              url = data.html_url || '';
            } else {
              const { data } = await github.rest.issues.create({ owner, repo, title, body });
              url = data.html_url || '';
            }
            return url;

      - name: Show Issue link
        run: |
          echo "### Wallet Snapshot Issue" >> "$GITHUB_STEP_SUMMARY"
          echo "${{ steps.issue.outputs.result }}" >> "$GITHUB_STEP_SUMMARY" || true

      - name: Upload artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: wallet-snapshot
          path: snapshot.txt
          if-no-files-found: warn
