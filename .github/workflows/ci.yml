name: CI (AST-only on PR; tests opt-in)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  ast_only:
    name: AST-only (no exec)
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: AST parse all .py
        run: |
          python - <<'PY'
          import ast, pathlib, sys
          bad=[]
          skip={'.venv','venv','build','dist','node_modules','.git','.github'}
          for f in pathlib.Path('.').rglob('*.py'):
              if any(x in f.parts for x in skip):
                  continue
              try:
                  ast.parse(f.read_text(encoding='utf-8'), filename=str(f))
              except Exception as e:
                  bad.append((str(f), e))
          if bad:
              for f,e in bad: print(f"[AST ERR] {f}: {e}")
              sys.exit(1)
          print("[AST] OK")
          PY

  tests_optin:
    name: Tests (only if ENABLE_TESTS=1)
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && env.ENABLE_TESTS == '1'
    timeout-minutes: 10
    env:
      ENABLE_TESTS: ${{ vars.ENABLE_TESTS || '0' }}
      PYTHONUNBUFFERED: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install deps (best-effort)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt || true; fi
          pip install pytest || true
      - name: Run pytest (if tests/ exists)
        run: |
          if [ -d tests ]; then pytest -q || true; else echo "No tests/ dir, skipping."; fi
